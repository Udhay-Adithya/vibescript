Terminals which are not used

   GLOWUP_TOKEN
   GLOWDOWN_TOKEN
   PLUS_TOKEN
   MINUS_TOKEN
   MULTIPLY_TOKEN
   DIVIDE_TOKEN
   LPAREN_TOKEN
   RPAREN_TOKEN
   COMMA_TOKEN
   BOP_TOKEN
   SUS_TOKEN
   OK_BOOMER_TOKEN
   SLAY_TOKEN
   FIRE_TOKEN
   SNATCHED_TOKEN
   FLEX_TOKEN
   SPILL_TOKEN
   SHOOK_TOKEN
   SALTY_TOKEN
   TEA_TOKEN
   CLOUT_TOKEN
   DEAD_TOKEN
   GREATER_THAN_TOKEN
   LESS_THAN_TOKEN


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: expression SEMICOLON_TOKEN
    5          | BET_TOKEN expression LBRACE_TOKEN statements RBRACE_TOKEN
    6          | NO_CAP_TOKEN LBRACE_TOKEN statements RBRACE_TOKEN

    7 expression: IDENTIFIER_TOKEN MOOD_TOKEN expression
    8           | DIGITS_TOKEN
    9           | VIBES_TOKEN
   10           | FEELS_TOKEN


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER_TOKEN (258) 7
DIGITS_TOKEN (259) 8
VIBES_TOKEN (260) 9
FEELS_TOKEN (261) 10
MOOD_TOKEN (262) 7
GLOWUP_TOKEN (263)
GLOWDOWN_TOKEN (264)
PLUS_TOKEN (265)
MINUS_TOKEN (266)
MULTIPLY_TOKEN (267)
DIVIDE_TOKEN (268)
LPAREN_TOKEN (269)
RPAREN_TOKEN (270)
LBRACE_TOKEN (271) 5 6
RBRACE_TOKEN (272) 5 6
SEMICOLON_TOKEN (273) 4
COMMA_TOKEN (274)
BET_TOKEN (275) 5
NO_CAP_TOKEN (276) 6
BOP_TOKEN (277)
SUS_TOKEN (278)
OK_BOOMER_TOKEN (279)
SLAY_TOKEN (280)
FIRE_TOKEN (281)
SNATCHED_TOKEN (282)
FLEX_TOKEN (283)
SPILL_TOKEN (284)
SHOOK_TOKEN (285)
SALTY_TOKEN (286)
TEA_TOKEN (287)
CLOUT_TOKEN (288)
DEAD_TOKEN (289)
GREATER_THAN_TOKEN (290)
LESS_THAN_TOKEN (291)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
statements (39)
    on left: 2 3, on right: 1 3 5 6
statement (40)
    on left: 4 5 6, on right: 2 3
expression (41)
    on left: 7 8 9 10, on right: 4 5 7


state 0

    0 $accept: . program $end

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4
    BET_TOKEN         shift, and go to state 5
    NO_CAP_TOKEN      shift, and go to state 6

    program     go to state 7
    statements  go to state 8
    statement   go to state 9
    expression  go to state 10


state 1

    7 expression: IDENTIFIER_TOKEN . MOOD_TOKEN expression

    MOOD_TOKEN  shift, and go to state 11


state 2

    8 expression: DIGITS_TOKEN .

    $default  reduce using rule 8 (expression)


state 3

    9 expression: VIBES_TOKEN .

    $default  reduce using rule 9 (expression)


state 4

   10 expression: FEELS_TOKEN .

    $default  reduce using rule 10 (expression)


state 5

    5 statement: BET_TOKEN . expression LBRACE_TOKEN statements RBRACE_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4

    expression  go to state 12


state 6

    6 statement: NO_CAP_TOKEN . LBRACE_TOKEN statements RBRACE_TOKEN

    LBRACE_TOKEN  shift, and go to state 13


state 7

    0 $accept: program . $end

    $end  shift, and go to state 14


state 8

    1 program: statements .
    3 statements: statements . statement

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4
    BET_TOKEN         shift, and go to state 5
    NO_CAP_TOKEN      shift, and go to state 6

    $default  reduce using rule 1 (program)

    statement   go to state 15
    expression  go to state 10


state 9

    2 statements: statement .

    $default  reduce using rule 2 (statements)


state 10

    4 statement: expression . SEMICOLON_TOKEN

    SEMICOLON_TOKEN  shift, and go to state 16


state 11

    7 expression: IDENTIFIER_TOKEN MOOD_TOKEN . expression

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4

    expression  go to state 17


state 12

    5 statement: BET_TOKEN expression . LBRACE_TOKEN statements RBRACE_TOKEN

    LBRACE_TOKEN  shift, and go to state 18


state 13

    6 statement: NO_CAP_TOKEN LBRACE_TOKEN . statements RBRACE_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4
    BET_TOKEN         shift, and go to state 5
    NO_CAP_TOKEN      shift, and go to state 6

    statements  go to state 19
    statement   go to state 9
    expression  go to state 10


state 14

    0 $accept: program $end .

    $default  accept


state 15

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


state 16

    4 statement: expression SEMICOLON_TOKEN .

    $default  reduce using rule 4 (statement)


state 17

    7 expression: IDENTIFIER_TOKEN MOOD_TOKEN expression .

    $default  reduce using rule 7 (expression)


state 18

    5 statement: BET_TOKEN expression LBRACE_TOKEN . statements RBRACE_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4
    BET_TOKEN         shift, and go to state 5
    NO_CAP_TOKEN      shift, and go to state 6

    statements  go to state 20
    statement   go to state 9
    expression  go to state 10


state 19

    3 statements: statements . statement
    6 statement: NO_CAP_TOKEN LBRACE_TOKEN statements . RBRACE_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4
    RBRACE_TOKEN      shift, and go to state 21
    BET_TOKEN         shift, and go to state 5
    NO_CAP_TOKEN      shift, and go to state 6

    statement   go to state 15
    expression  go to state 10


state 20

    3 statements: statements . statement
    5 statement: BET_TOKEN expression LBRACE_TOKEN statements . RBRACE_TOKEN

    IDENTIFIER_TOKEN  shift, and go to state 1
    DIGITS_TOKEN      shift, and go to state 2
    VIBES_TOKEN       shift, and go to state 3
    FEELS_TOKEN       shift, and go to state 4
    RBRACE_TOKEN      shift, and go to state 22
    BET_TOKEN         shift, and go to state 5
    NO_CAP_TOKEN      shift, and go to state 6

    statement   go to state 15
    expression  go to state 10


state 21

    6 statement: NO_CAP_TOKEN LBRACE_TOKEN statements RBRACE_TOKEN .

    $default  reduce using rule 6 (statement)


state 22

    5 statement: BET_TOKEN expression LBRACE_TOKEN statements RBRACE_TOKEN .

    $default  reduce using rule 5 (statement)
